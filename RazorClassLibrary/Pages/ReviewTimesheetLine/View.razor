@page "/review_timesheetline/{TimesheetId:int}/{Id:int}"
@attribute [Microsoft.AspNetCore.Authorization.Authorize(Policy = Policies.CanReviewTimesheets)]

@using Domain.Common
@using Domain.Main.DTO
@using Domain.Timesheets.DTO
@using RazorClassLibrary.Services
@using AutoMapper
@inject IEntityServices entityServices
@inject IMapper mapper
@inject NavigationManager navigationManager
@inject IToastService toastService
<h2>Review TimesheetLine</h2>
<hr />
<div class="row col-lg-6">
    <div class="form-group mb-2 row">
        <label class="col-sm-4 col-form-label">Legal Entity</label>
        <label class="col-sm-8 col-form-label">@timesheetLine.LegalEntityName</label>
    </div>
    <div class="form-group mb-2 row">
        <label class="col-sm-4 col-form-label">Location</label>
        <label class="col-sm-8 col-form-label">@timesheetLine.LocationName</label>
    </div>
    <div class="form-group mb-2 row">
        <label class="col-sm-4 col-form-label">Customer</label>
        <label class="col-sm-8 col-form-label">@timesheetLine.CustomerName</label>
    </div>
    <div class="form-group mb-2 row">
        <label class="col-sm-4 col-form-label">Project</label>
        <label class="col-sm-8 col-form-label">@timesheetLine.ProjectName</label>
    </div>
    <div class="form-group mb-2 row">
        <label class="col-sm-4 col-form-label">Activity</label>
        <label class="col-sm-8 col-form-label">@timesheetLine.ActivityName</label>
    </div>
    <div class="form-group mb-2 row">
        <label class="col-sm-4 col-form-label">Category</label>
        <label class="col-sm-8 col-form-label">@timesheetLine.CategoryName</label>
    </div>
    <div class="form-group mb-2 row">
        <label class="col-sm-4 col-form-label">LineProperty</label>
        <label class="col-sm-8 col-form-label">@timesheetLine.LinePropertyName</label>
    </div>
</div>
<br />
<div class="row mb-3">
    <div class="input-group col-6 text-right">
        <input type="text" class="form-control" placeholder="Search" @bind="this.searchValue" @onkeyup="SearchBoxKeyPress" />
        <div class="input-group-btn">
            <button class="btn btn-default" @onclick="SearchClick">
                <i class="oi oi-magnifying-glass" title="search" aria-hidden="true"></i>
            </button>
        </div>
        <div class="input-group-btn">
            <button class="btn btn-default" @onclick="ClearSearch">
                <i class="oi oi-x" title="clear" aria-hidden="true"></i>
            </button>
        </div>
    </div>
</div>
<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th style="width:15%">Day</th>
            <th style="width:15%">Hours</th>
            <th style="width:35%">Internal comment</th>
            <th style="width:35%">External comment</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var timesheetLineDetail in timesheetLine.TimesheetLineDetails)
        {
        <tr>
            <td class="align-middle">
                <label class="col-sm-4 col-form-label">@timesheetLineDetail.Day.ToString("ddd MM/dd")</label>
            </td>
            <td class="align-middle">
                <label class="col-sm-4 col-form-label">@timesheetLineDetail.Hours.ToString("0.00")</label>
            </td>
            <td class="align-middle">
                <label class="col-sm-4 col-form-label">@timesheetLineDetail.InternalComment</label>
            </td>
            <td class="align-middle">
                <label class="col-sm-4 col-form-label">@timesheetLineDetail.ExternalComment</label>
            </td>
        </tr>
    }
    </tbody>
</table>
<NavLink href="@($"/review_timesheet/{TimesheetId}")" class="btn btn-link">Back</NavLink>

@code {
    [Parameter]
    public int TimesheetId { get; set; }
    [Parameter]
    public int Id { get; set; }

    private string searchValue { get; set; } = default!;
    private TimesheetLineDTO timesheetLine = new();
    private List<LegalEntityDTO> legalEntities { get; set; } = new();
    private List<LocationDTO> locations { get; set; } = new();
    private List<CustomerDTO> customers { get; set; } = new();
    private List<ProjectDTO> projects { get; set; } = new();
    private List<ActivityDTO> activities { get; set; } = new();
    private List<CategoryDTO> categories { get; set; } = new();
    private List<LinePropertyDTO> lineProperties { get; set; } = new();

    protected async override void OnParametersSet()
    {
        await RefreshPageAsync();
    }

    private async Task RefreshPageAsync()
    {
        var response = await entityServices.TimesheetLineService.GetTimesheetLineByIdAsync(TimesheetId, Id, searchValue);
        if (response is not null)
        {
            timesheetLine = mapper.Map<TimesheetLineDTO>(response);
            StateHasChanged();
        }
    }

    protected async Task SearchBoxKeyPress(KeyboardEventArgs ev)
    {
        if (ev.Key == "Enter")
        {
            await SearchClick();
        }
    }

    protected async Task SearchClick()
    {
        await RefreshPageAsync();
    }

    protected async Task ClearSearch()
    {
        searchValue = default!;
        await RefreshPageAsync();
    }
}
